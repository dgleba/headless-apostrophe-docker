// ----- Global variables -----
$menuHeight: 100px;

// -------- Animations --------
@keyframes swing {
  50% {
    top: 10px;
  }

  0%,
  100% {
    top: 0;
  }
}

@keyframes slideup {
  from {
    margin-top: $menuHeight;
  }

  to {
    margin-top: 0;
  }
}

@keyframes arrow-anim {
  0% {
    opacity: 1;
    transform: translateX(0) rotate(180deg);
  }

  100% {
    transform: translateX(-1rem) rotate(180deg);
    opacity: 0;
  }
}

// -------- Placeholders --------
%menu-placeholder {
  background: #66c6ff;
  position: relative;
  width: calc(100vw + 100vh);
  height: $menuHeight;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;

  &:hover {
    animation: swing 0.5s ease;

    .at_back_icon {
      &--hidden {
        opacity: 1;
        animation: arrow-anim 2.5s ease infinite;
      }

      &__circle {
        stroke-dashoffset: 100;
      }
    }
  }

  @media (orientation: portrait) {
    width: calc(100vh);

    @media (min-aspect-ratio: 5/8) {
      width: calc(150vh);
    }
  }
}

// -------- Mixins --------
// creates menus as [namespace]__menu--1, [namespace]__menu--2, ...
@mixin menu-mixin ($steps) {
  $x: -2%;
  $y: 7%;
  $ybis: 0%;
  $yter: -400%;
  $startTime: 0s;

  @for $i from 0 to $steps {
    &__#{$i + 1} {
      $loopX: $x + $i * -8;
      $loopY: $y + $i * 28;
      $loopYbis: $ybis + $i * -100;
      $loopYter: $yter + $i * -100;
      $loopStart: $startTime + $i * 0.3;

      @extend %menu-placeholder;

      @if $i+1==1 {
        background: #96c800;
      }

      transform: rotate(25deg) translate($loopX, $loopY);
      transition: transform 0.5s cubic-bezier(0.78, -0.58, 1, 0.51) $loopStart;

      &--appear {
        transform: rotate(0deg) translate(0, $loopYbis);

        @media (orientation: portrait) and (min-aspect-ratio: 5/8) {
          transform: rotate(0deg) translate(-10%, $loopYbis);
        }
      }

      &--appear-page {
        transform: rotate(0deg) translate(0, 0);
      }

      &--disappear {
        transform: rotate(25deg) translate($loopX, $loopYter);
      }
    }
  }
}
